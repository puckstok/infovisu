Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 1265, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/base_events.py", line 650, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/contextlib.py", line 222, in __aexit__
    await self.gen.athrow(typ, value, traceback)
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 648, in async_setup_kernel
    yield
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 703, in async_execute
    await self.async_execute_cell(
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 1021, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 915, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#voorbeeld laten zien in werkgroep 

#Stap 1: Laad en filter de relevante datasets
data_raw = pd.read_csv('migranten_eu.csv')
data_ter = pd.read_csv('terrorism_eu.csv').rename(columns={'country_txt': 'Country of asylum', 'iyear': 'Year', 'multiple': 'Terrorist attacks'})
data_lon_lat = pd.read_csv('world_country_and_usa_states_latitude_and_longitude_values.csv').rename(columns={'country': 'Country of asylum'})

df_ter = pd.read_csv('globalterrorismdb_0718dist.csv', encoding='latin-1', sep=';')
df_ter.head()
df1_ter = df_ter.groupby(['iyear', 'region_txt', 'country_txt', 'gname']).count().reset_index()
df1_ter
mask = df1_ter[df1_ter['region_txt'].isin(['Eastern Europe', 'Western Europe'])]
mask
df2_ter = mask[mask.iyear.between(2000, 2017)]
df2_ter
df3_ter = df2_ter.groupby(['iyear']).count().reset_index()
df3_ter = df2_ter.groupby('iyear')['eventid'].sum().reset_index().rename(columns = {'iyear' : 'year', 'eventid' : 'count'})
df4_ter = df2_ter.groupby('country_txt')['eventid'].sum().reset_index().rename(columns = {'country_txt' : 'country', 'eventid' : 'count'})
df4_ter
df3_ter

df5_ter = df2_ter[['iyear', 'country_txt', 'eventid', 'gname']].rename(columns = {'iyear' : 'year', 'country_txt' : 'country', 'eventid' : 'count', 'gname' : 'group'})
df5_ter

data_raw.drop(data_raw.loc[data_raw['Year']==1999].index, inplace=True)
data_raw.head(5) 

#Stap 2: Versimpel langere namen van landen om later toe te passen in de samenvoeging van datasets 
migranten_totaal_europa = data_raw[['Year', 'Country of asylum', "Refugees under UNHCR's mandate"]]
migranten_totaal_europa['Country of asylum'] = migranten_totaal_europa['Country of asylum'].replace({'Netherlands (Kingdom of the)': 'Netherlands'})
migranten_totaal_europa['Country of asylum'] = migranten_totaal_europa['Country of asylum'].replace({'United Kingdom of Great Britain and Northern Ireland': 'United Kingdom'})
migranten_totaal_europa['Country of asylum'] = migranten_totaal_europa['Country of asylum'].replace({'Serbia and Kosovo: S/RES/1244 (1999)': 'Serbia'})
migranten_totaal_europa.head(5) 

populatie_eu = df1_ter = migranten_totaal_europa.groupby(['Year']).sum()

data_ter['Country of asylum'] = data_ter['Country of asylum'].replace({'Macedonia': 'North Macedonia'})
data_ter['Country of asylum'] = data_ter['Country of asylum'].replace({'Slovak Republic': 'Slovakia'})
data_ter['Country of asylum'] = data_ter['Country of asylum'].replace({'Serbia-Montenegro': 'Serbia'})
data_ter = data_ter[['Country of asylum', 'Year', 'Terrorist attacks']]
data_ter.head(5)

data_lon_lat['Country of asylum'] = data_lon_lat['Country of asylum'].replace({'Macedonia [FYROM]': 'North Macedonia'})
data_lon_lat2 = data_lon_lat[['latitude', 'longitude', 'Country of asylum']]
data_lon_lat2.head(5)

#Stap 3: Maak een nieuwe dataframe 
df2 = migranten_totaal_europa.groupby(['Year','Country of asylum'], as_index=False)["Refugees under UNHCR's mandate"].sum()
print(df2)

df3 = migranten_totaal_europa.groupby(['Year'], as_index=False)["Refugees under UNHCR's mandate"].sum()
print(df3)

df4 = migranten_totaal_europa.groupby(['Country of asylum'], as_index=False)["Refugees under UNHCR's mandate"].sum()
print(df4)

df3_ter
sum(df3_ter['count'])

#Stap 4: voeg de data van terroristische aanslagen en aantal vluchtelingen samen 
df_half = df2.merge(data_lon_lat2, on='Country of asylum')
df_full = pd.merge(df_half, data_ter,  how='left', left_on=['Country of asylum','Year'], right_on = ['Country of asylum','Year']).fillna(0)
df_full.head(500) 
#df_full.to_csv('test.csv')

#Stap 5: maak map figuur 
fig = px.scatter_geo(df_full, 
                     lat='latitude',
                     lon='longitude',
                     color="Refugees under UNHCR's mandate",
                     color_continuous_scale=px.colors.sequential.OrRd,
                     height=650,
                     width=950,
                     hover_name="Country of asylum",
                     hover_data={
                                "Refugees under UNHCR's mandate":True, 
                                "Terrorist attacks":True,
                                "latitude":False, 
                                "longitude":False,
                                },
                     projection="natural earth",
                     scope="europe",
                     size=df_full["Year"],
                     size_max=10,
                     animation_frame="Year",
                     range_color=(0,200000),
                    )


fig.update_geos(
    visible=True, 
    resolution=50,
    showcountries=True, 
    countrycolor="whitesmoke",
    bgcolor='whitesmoke',
    landcolor='#26a783',
)

fig.update_layout(
    title='Hoeveelheid vluchtelingen en terroristische aanvallen tussen 2000 en 2017',
)

fig.update_traces(marker=dict(line=dict(width=0.5, color='black')))
fig.show()

#Stap 6: maak de nieuwe files voor de datastory 
# df2.to_csv('migranten_per_jaar_per_land.csv')
# df3.to_csv('migranten_per_jaar_europa.csv')
# df4.to_csv('migranten_per_land_totaal.csv')
# populatie_eu.to_csv('populatie_eu.csv')
# df3_ter.to_csv('aanslagen_per_jaar.csv', index=False, header=True)
# df4_ter.to_csv('totale_aanslagen_per_land.csv', index=False, header=True)
# df5_ter.to_csv('aanslagen_per_jaar_per_land_per_groep.csv', index=False, header=True)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
Cell [0;32mIn[2], line 10[0m
[1;32m      8[0m df_ter [38;5;241m=[39m pd[38;5;241m.[39mread_csv([38;5;124m'[39m[38;5;124mglobalterrorismdb_0718dist.csv[39m[38;5;124m'[39m, encoding[38;5;241m=[39m[38;5;124m'[39m[38;5;124mlatin-1[39m[38;5;124m'[39m, sep[38;5;241m=[39m[38;5;124m'[39m[38;5;124m;[39m[38;5;124m'[39m)
[1;32m      9[0m df_ter[38;5;241m.[39mhead()
[0;32m---> 10[0m df1_ter [38;5;241m=[39m [43mdf_ter[49m[38;5;241;43m.[39;49m[43mgroupby[49m[43m([49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43miyear[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mregion_txt[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mcountry_txt[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mgname[39;49m[38;5;124;43m'[39;49m[43m][49m[43m)[49m[38;5;241m.[39mcount()[38;5;241m.[39mreset_index()
[1;32m     11[0m df1_ter
[1;32m     12[0m mask [38;5;241m=[39m df1_ter[df1_ter[[38;5;124m'[39m[38;5;124mregion_txt[39m[38;5;124m'[39m][38;5;241m.[39misin([[38;5;124m'[39m[38;5;124mEastern Europe[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mWestern Europe[39m[38;5;124m'[39m])]

File [0;32m/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pandas/core/frame.py:8402[0m, in [0;36mDataFrame.groupby[0;34m(self, by, axis, level, as_index, sort, group_keys, squeeze, observed, dropna)[0m
[1;32m   8399[0m     [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m([38;5;124m"[39m[38;5;124mYou have to supply one of [39m[38;5;124m'[39m[38;5;124mby[39m[38;5;124m'[39m[38;5;124m and [39m[38;5;124m'[39m[38;5;124mlevel[39m[38;5;124m'[39m[38;5;124m"[39m)
[1;32m   8400[0m axis [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_axis_number(axis)
[0;32m-> 8402[0m [38;5;28;01mreturn[39;00m [43mDataFrameGroupBy[49m[43m([49m
[1;32m   8403[0m [43m    [49m[43mobj[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[43m,[49m
[1;32m   8404[0m [43m    [49m[43mkeys[49m[38;5;241;43m=[39;49m[43mby[49m[43m,[49m
[1;32m   8405[0m [43m    [49m[43maxis[49m[38;5;241;43m=[39;49m[43maxis[49m[43m,[49m
[1;32m   8406[0m [43m    [49m[43mlevel[49m[38;5;241;43m=[39;49m[43mlevel[49m[43m,[49m
[1;32m   8407[0m [43m    [49m[43mas_index[49m[38;5;241;43m=[39;49m[43mas_index[49m[43m,[49m
[1;32m   8408[0m [43m    [49m[43msort[49m[38;5;241;43m=[39;49m[43msort[49m[43m,[49m
[1;32m   8409[0m [43m    [49m[43mgroup_keys[49m[38;5;241;43m=[39;49m[43mgroup_keys[49m[43m,[49m
[1;32m   8410[0m [43m    [49m[43msqueeze[49m[38;5;241;43m=[39;49m[43msqueeze[49m[43m,[49m
[1;32m   8411[0m [43m    [49m[43mobserved[49m[38;5;241;43m=[39;49m[43mobserved[49m[43m,[49m
[1;32m   8412[0m [43m    [49m[43mdropna[49m[38;5;241;43m=[39;49m[43mdropna[49m[43m,[49m
[1;32m   8413[0m [43m[49m[43m)[49m

File [0;32m/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pandas/core/groupby/groupby.py:965[0m, in [0;36mGroupBy.__init__[0;34m(self, obj, keys, axis, level, grouper, exclusions, selection, as_index, sort, group_keys, squeeze, observed, mutated, dropna)[0m
[1;32m    962[0m [38;5;28;01mif[39;00m grouper [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    963[0m     [38;5;28;01mfrom[39;00m [38;5;21;01mpandas[39;00m[38;5;21;01m.[39;00m[38;5;21;01mcore[39;00m[38;5;21;01m.[39;00m[38;5;21;01mgroupby[39;00m[38;5;21;01m.[39;00m[38;5;21;01mgrouper[39;00m [38;5;28;01mimport[39;00m get_grouper
[0;32m--> 965[0m     grouper, exclusions, obj [38;5;241m=[39m [43mget_grouper[49m[43m([49m
[1;32m    966[0m [43m        [49m[43mobj[49m[43m,[49m
[1;32m    967[0m [43m        [49m[43mkeys[49m[43m,[49m
[1;32m    968[0m [43m        [49m[43maxis[49m[38;5;241;43m=[39;49m[43maxis[49m[43m,[49m
[1;32m    969[0m [43m        [49m[43mlevel[49m[38;5;241;43m=[39;49m[43mlevel[49m[43m,[49m
[1;32m    970[0m [43m        [49m[43msort[49m[38;5;241;43m=[39;49m[43msort[49m[43m,[49m
[1;32m    971[0m [43m        [49m[43mobserved[49m[38;5;241;43m=[39;49m[43mobserved[49m[43m,[49m
[1;32m    972[0m [43m        [49m[43mmutated[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmutated[49m[43m,[49m
[1;32m    973[0m [43m        [49m[43mdropna[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mdropna[49m[43m,[49m
[1;32m    974[0m [43m    [49m[43m)[49m
[1;32m    976[0m [38;5;28mself[39m[38;5;241m.[39mobj [38;5;241m=[39m obj
[1;32m    977[0m [38;5;28mself[39m[38;5;241m.[39maxis [38;5;241m=[39m obj[38;5;241m.[39m_get_axis_number(axis)

File [0;32m/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pandas/core/groupby/grouper.py:888[0m, in [0;36mget_grouper[0;34m(obj, key, axis, level, sort, observed, mutated, validate, dropna)[0m
[1;32m    886[0m         in_axis, level, gpr [38;5;241m=[39m [38;5;28;01mFalse[39;00m, gpr, [38;5;28;01mNone[39;00m
[1;32m    887[0m     [38;5;28;01melse[39;00m:
[0;32m--> 888[0m         [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m(gpr)
[1;32m    889[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(gpr, Grouper) [38;5;129;01mand[39;00m gpr[38;5;241m.[39mkey [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    890[0m     [38;5;66;03m# Add key to exclusions[39;00m
[1;32m    891[0m     exclusions[38;5;241m.[39madd(gpr[38;5;241m.[39mkey)

[0;31mKeyError[0m: 'gname'
KeyError: 'gname'

